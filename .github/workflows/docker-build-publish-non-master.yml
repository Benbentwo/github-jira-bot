name: Docker Build
on:
  push:
    branches-ignore:
      - 'master'      # Push events to branches matching refs/heads/master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Go environment
        uses: actions/setup-go@v2.0.3

      - name: Checkout
        uses: actions/checkout@v1
      - name: Create Binaries
        run: |
          make all
      - name: Artifact Binaries
        uses: actions/upload-artifact@v2
        with:
          path: build/*
      - name: Extract branch name
        shell: bash
        id: extract_branch
#        Gets the branch name, then cleans up unsavory characters.
#          Replaces:
#             / -> -
#          Limits Length to 120
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | sed 's@/@-@g' | sed 's/%2F/-/g' | cut -c1-119)"

#       Tag = <BranchName (Tag Safe)>-<Short Commit Hash>
      - run: |
          short_ref=$(git rev-parse --short ${{github.sha}})
          tag=${{ steps.extract_branch.outputs.branch }}-${short_ref}
          image=bensmithdeveloper/github-jira-bot
          repository=$(echo ${{github.repository}} | tr '[:upper:]' '[:lower:]')
          github_image=${repository}/${{ steps.extract_branch.outputs.branch }}
          full_image=${image}:${tag}
          docker build -t ${full_image} .
          docker tag ${full_image} docker.pkg.github.com/${github_image}
          echo "##[set-output name=image;]$(echo ${image})"
          echo "##[set-output name=github_image;]$(echo ${github_image})"
          echo "##[set-output name=short_ref;]$(echo ${short_ref})"
        id: docker_build

      - name: Publish to Github Packages
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{ steps.docker_build.outputs.github_image }}
          username: ${{ secrets.GH_PKG_USER}}
          password: ${{ secrets.GH_PKG_API }}
          tags: "latest,${{steps.docker_build.outputs.short_ref}}"
          registry: docker.pkg.github.com

      - name: Publish to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{ steps.docker_build.outputs.image }}
          username: ${{ secrets.DOCKER_HUB_USER}}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
          tags: "latest,${{steps.docker_build.outputs.short_ref}}"
